{"name": "test_case[item1]", "status": "broken", "statusDetails": {"message": "KeyError: 'template_response_json'", "trace": "self = <scripts.test_case.TestCase object at 0x0000000003864A20>\nitem = {'case_num': 'neeo_002', 'cookies': '', 'data': '', 'except': '{\"code\":\"0\",\"message\":\"success\"}', ...}\n\n    @pytest.mark.parametrize(\"item\", excel_data_list)\n    def test_case(self, item):\n        logger().info(\"正在进行断言\")\n>       except_data, result = RequestsOperate(current_case=item, all_excel_data_list=excel_data_list).get_response_msg()\n\nscripts\\test_case.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\RequestsHandler.py:32: in get_response_msg\n    return self._send_msg()\nutils\\RequestsHandler.py:43: in _send_msg\n    headers=self._check_request_headers(),\nutils\\RequestsHandler.py:61: in _check_request_headers\n    return self._operate_re_msg(headers)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utils.RequestsHandler.RequestsOperate object at 0x000000000475B668>\nparameter = '{\"testfan-token\":\"${neeo_001>response_json>data}$\"}'\n\n    def _operate_re_msg(self, parameter):\n        \"\"\"\n        正则校验,数据依赖的字段\n        :param parameter: 各种参数，如：data,header,params\n        :return:\n        \"\"\"\n        # 使用re 将提取依赖字段 {\"testfan-token\":\"${neeo_001>response_json>data}$\"}\n        if isinstance(parameter, dict):\n            json.dumps(parameter)\n        pattern = re.compile(\"\\${(.*?)}\\$\")  # 定义规则\n        rule_list = pattern.findall(parameter)  # 按照规则匹配\n        if rule_list:  # 该参数有数据依赖要处理\n            for rule in rule_list:\n                case_num, params, json_path = rule.split(\">\")\n                for line in self.all_excel_data_list:\n                    if line[\"case_num\"] == case_num:\n>                       temp_data = line[\"template_{}\".format(params)]\nE                       KeyError: 'template_response_json'\n\nutils\\RequestsHandler.py:123: KeyError"}, "attachments": [{"name": "log", "source": "54388ed9-0224-4a76-863b-e7a11f928d3f-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "item", "value": "{'case_num': 'neeo_002', 'title': 'token_查询余额', 'url': 'http://www.neeo.cc:6002/pinter/bank/api/query2', 'method': 'get', 'params': '{\"userName\":\"admin\"}', 'data': '', 'json': '', 'cookies': '', 'headers': '{\"testfan-token\":\"${neeo_001>response_json>data}$\"}', 'except': '{\"code\":\"0\",\"message\":\"success\"}'}"}], "start": 1615541370569, "stop": 1615541370571, "uuid": "071c4275-9c7d-4a31-a7b5-c654e5265fac", "historyId": "e672a245af5fff9723d7828058cd9338", "testCaseId": "26c298dcd4e08901cbba1d289c15c556", "fullName": "scripts.test_case.TestCase#test_case", "labels": [{"name": "parentSuite", "value": "scripts"}, {"name": "suite", "value": "test_case"}, {"name": "subSuite", "value": "TestCase"}, {"name": "host", "value": "tian"}, {"name": "thread", "value": "48388-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "scripts.test_case"}]}